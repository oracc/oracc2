#include <dx.h>
#include <osh.h>

const char *progname = NULL;
const char *project = NULL;
const char *user = NULL;
int ssh_mode = 0;
int verbose = 0;

int
main(int argc, char **argv)
{
  char **optv = NULL;
  progname = argv[0];

  if ((optv = osh_options(argc, argv)))
    {
      /* osh_project guarantees we are in a project directory where we
	 have permission to be */
      if (!osh_project(optv))
	{
	  /* osh_commands returns a pointer to static data; NULL
	     indicates an unknown command */
	  struct osh_info *oip = osh_commands(optv[1], strlen(optv[1]));
	  if (oip)
	    {
	      if (verbose)
		fprintf(stderr, "%s: project=%s; initial command=%s\n", progname, optv[0], optv[1]);
	      if (oip->type == OSH_BUILTIN)
		{
		  /* On success osh has been replaced by the builtin;
		     builtins all echo machine state data using, e.g.,
		     ls or printenv */
		  if (osh_exec(oip->cmd, oip->arg))
		    goto error;
		}
	      else
		{
		  /* On success we have a live connection to the Oracc
		     daemon via a Unix domain socket */
		  if (osh_dcx(optv))
		    goto error;
		}
	      
	    }
	  else
	    {
	      fprintf(stderr, "%s: unknown command '%s'. Stop.\n", argv[0], optv[1]);
	      goto error;
	    }	  
	}
    }
  else
    {
      fprintf(stderr, "%s: error parsing arguments. Stop.\n", argv[0]);
      goto error;
    }
  return 0;

 error:
  return 1;
}
