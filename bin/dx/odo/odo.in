#!/bin/dash
#
# First argument is project; if project is "." use oraccopt to find it from 00lib/config.xml
#
# Second argument is command
#
# Additional arguments are passed to the command script
#
project=$1
if [ "$project" = "." ]; then
    if [ -r 00lib/config.xml ]; then
	project=`oraccopt`
    else
	echo $0: you can only use 'odo .' in a project directory. Stop.
	exit 1
    fi
fi
if [ "$project" != "" ]; then
    shift
    command=$1
    echo project=$project command=$command
    if [ "$command" != "" ]; then
	shift
	bin=@@ORACC_BUILDS@@/bin
	user=`/bin/echo -n $project | cut -d/ -f1`
	if [ $command = "init" ]; then
	    $bin/odo-cvs-checkout.sh $user $*
	else
	    projdir=@@ORACC_BUILDS@@/$project
	    if [ -d $projdir ]; then
		(cd $projdir
		 . $bin/oscx-server-env.sh
		 $bin/odo-cvs-refresh.sh $user $*
		 uscript=$bin/${user}-${command}.sh
		 if [ -x $bin/$user-$command.sh ]; then
		     . $uscript $*
		 else
		     script=$bin/odo-$command.sh
		     if [ -x $script ]; then
			 . $script $*
		     else
			 echo $0: unknown command $command (tried $uscript and $script). Stop.
		     fi
		 fi
		 )
	    else
		echo $0: unknown project $project.  Do you need to run oraxx $project init?. Stop.		
	    fi
	fi
    else
	echo $0: empty command argument. Stop.
    fi
else
    echo $0: empty project argument. Stop.
fi
