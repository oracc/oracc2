/* binops.c */
extern void binop_init(void);
extern struct Datum binop(enum se_toks boo, struct near *range, struct Datum d1, struct Datum d2);
extern struct Datum variant(struct Datum *d1, struct Datum *d2);
extern struct Datum source(struct Datum *d1, struct Datum *d2);
extern int same_word(struct location16 *l, struct location16 *r);
extern int same_but_prop(struct location16 *l, struct location16 *r);
/* binops24.c */
extern int xmask_sc(int x);
extern int xmask_logo(int x);
extern void binop24_init(void);
extern struct Datum binop24(enum se_toks boo, struct near *range, struct Datum d1, struct Datum d2);
extern void datum_free24(struct Datum *dp);
extern struct Datum variant24(struct Datum *d1, struct Datum *d2);
extern struct Datum source24(struct Datum *d1, struct Datum *d2);
/* cgi_decode_url.c */
extern char *CGI_decode_url(const char *p);
/* cgi_options.c */
extern int qx_cgi_options(int argc, char **argv, struct qxdata *qp);
/* cgiopts.c */
extern struct cgioptstab *cgiopts(register const char *str, size_t len);
/* evaluate.c */
extern void set_project_arg(const char *p);
extern void set_project(struct token *t);
extern void set_index(struct token *t);
extern struct Datum evaluate(struct token *toks, int fcode, int lmask, struct token **lastused);
extern struct Datum *merge_data_pair(struct Datum *d1, struct Datum *d2);
/* px.c */
extern int px_exec(struct qxdata *qp, struct sdata *sdp);
/* qx.c */
extern int qx_tmpdir(struct qxdata *qp);
extern int qx(struct qxdata *qp);
extern int qx_count_file(struct sdata *sdp);
/* qx_error.c */
extern int qx_error(struct qxdata *qp, struct sdata *sdp);
/* qx_options.c */
extern int qx_options(int argc, char **argv, struct qxdata *qp);
extern int opts(int argc, const char *arg);
extern void help(void);
/* se.c */
extern int main(int argc, char **argv);
/* se_any.c */
extern int se_any(struct qxdata *qp, struct sdata *sdp);
extern const char **anytoks(const char *project, const char *index, const char **toks);
/* se_debug.c */
extern void debug_tuw(struct location8 *p8);
extern void debug_location8(struct location8 *l8p, struct location8 *r8p);
extern void debug_location16(struct location16 *l16p, struct location16 *r16p);
extern void debug_location24(struct location24 *l24p, struct location24 *r24p);
extern void debug_message(const char *msg);
extern void debug_results(const char *label, struct Datum *dp);
/* se_pcre.c */
extern void se_pcre_init(const char *project, const char *index);
extern List *se_pcre(const char *pattern);
extern List *apply_pcre(const char *pattern, const char *subject, size_t sublen);
/* se_results.c */
extern void put_results(struct qxdata *qp, struct Datum *res);
extern char id_prefix(long int id);
extern int XidVal(long int id);
extern void show_results(struct Datum *dp);
/* se_run.c */
extern long result_count(void);
extern int se_run_qx(struct qxdata *qp, struct sdata *sdp);
extern int se_run(struct qxdata *qp, struct sdata *sdp);
extern void run_search(struct token *toks);
/* setoks.c */
extern struct se_tok_tab *setoks(register const char *str, size_t len);
/* tokenize.c */
extern struct token *add_token(enum se_toks t);
extern void tokinit(void);
extern const char *scan_name(struct token *tokp, const char *s);
extern struct token *tokenize(const char **tokptrs, int *ntoks);
extern void final_zero(const unsigned char *g, struct token *src);
extern void showtoks(struct token *tokens, int ntoks, int phase);
/* xkeys.c */
extern int fieldcode(const char *proj, const char *index, const char *fldname);
/* xml.c */
extern void xmldir_results(const char *xmldir, int count);
