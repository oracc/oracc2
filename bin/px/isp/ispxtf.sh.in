#!/bin/dash
#
# $1=project $2=PQX $3=tr-lang $4=item-dir $5=xmdoutline.xsl
#
# New oraccopt will support:
#
#   -p project -d default -a (search ancestor-or-self config) -s (search system config) OPTION
#
# xtlproject=`oraccopt -p $1 -d $1 -a catalog-master-project
#
# Exit
#	0 on success
#	1 on error
#	2 no XMD--text not in project
#	3 no XTF--transliteration not available
#
oraccbin=@@ORACC_BUILDS@@/bin
project=$1
PQX=$2
tr=$3
metadir=$4
xmdout=$5
cachedir=$6

errlog=$cachedir/err.log
rm -f $errlog
exec 2>$errlog
echo $0 $* >&2

xtl=`$oraccbin/pqxpand xtl $xtlproject:$PQX`
projarg="-param project '$project'"
if [ -r $xtl ]; then
    xtlarg="-stringparam xtl $xtl"
fi
xmd=`$oraccbin/pqxpand xmd $project:$PQX`
xtf=`$oraccbin/pqxpand xtf $project:$PQX`

# Check that we have the necessary source data
[ -r $xmd ] || exit 2
mkdir -v -p $metadir || exit 1
xsltproc $projarg $xtlarg $xmdout $xmd >$metadir/meta.xml
if [ $? -eq 0 ]; then
    [ -r $xtf ] || exit 3
    four=`echo $PQX | head -c4`
    d=${ORACC_BUILDS}/www/htm/$1/$four/$PQX
    mkdir -v -p $d || exit 1
    $oraccbin/xtf2txh -h -i $project:$PQX
    if [ $? -eq 0 ]; then
	$oraccbin/xmd2htm -h -i $project:$PQX
	if [ ! $? -eq 0 ]; then
	    echo "Failed call invoked as:" >&2
	    echo "	$oraccbin/xmd2htm -h -i $project:$PQX" >&2
	    echo $0: xmd2htm failed. Stop. >&2
	    exit 1
	fi
    else
	echo "Failed call invoked as:" >&2
	echo "	$oraccbin/xtf2txh -h -i $project:$PQX" >&2
	echo $0: xtf2txh failed. Stop. >&2
	exit 1
    fi
else
    echo "Failed call invoked as:" >&2
    echo "	xsltproc $projarg $xtlarg $xmdout $xmd >$metadir/meta.xml" >&2
    echo $0: xsltproc failed. Stop. >&2
    exit 1
fi
#
# Removing the errlog when exiting 0 is the right thing to do but it
# means that we have to be careful in the above to test $? as we go
# and exit 1 appropriately.
#
if [ $? -eq 0 ]; then
    rm -f $errlog
fi

# exit with last program's status; don't exit 0/1 based on empty
# errlog because that could contain diagnostics
