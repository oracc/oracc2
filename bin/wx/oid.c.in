#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include "wx_dbxlib.h"
#include "resolver.h"
#include "ccgi/ccgi.h"
#include "p4url.h"

extern void dump_vl(CGI_varlist *vl);

void
p4oid(P4url *p)
{
  if (p->project && p->glossary)
    {
      char o[strlen(oracc())+strlen(p->project)+strlen(p->glossary)+strlen(p->oxid)+strlen("/////.html0")];
      sprintf(o, "%s/www/%s/cbd/%s/%s.html", oracc(), p->project, p->glossary, p->oxid);
      if (!access(o,R_OK))
	cat_html_file(o);
    }
  else if (p->project)
    {
      project = p->project;
      oid(p->oxid);
    }
  else
    ; /* could do pan-Oracc OID resolution here */
}

void
oid(const char *e2)
{
  Dbi_index *dbi = wx_dbx_proj_oid(project);
  if (dbi)
    {
      const char *v;
      v = wx_dbx_key(dbi, e2);
      if (v && '\t' == v[1])
	{
	  if ('u' == *v)
	    do302(v+2);
#if 0
	  /* 2024-09-26 previous removal of 'u' processing was too
	     harsh; but still pass 'h' types through to p4 */
	  else if ('h' == *v)
	    cat_html_file(v+2);
#endif
	}
      wx_dbx_term(dbi);
    }
  /* return to p4 processing if no 02pub/oid.dbi */
}
