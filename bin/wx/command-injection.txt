Command Injection Remediation: Sanitization
*******************************************

from: https://wiki.owasp.org/index.php/Testing_for_Command_Injection_(OTG-INPVAL-013)

The URL and form data needs to be sanitized for invalid characters. A
“blacklist” of characters is an option but it may be difficult to
think of all of the characters to validate against. Also there may be
some that were not discovered as of yet. A “white list” containing
only allowable characters or command list should be created to
validate the user input. Characters that were missed, as well as
undiscovered threats, should be eliminated by this list.

General blacklist to be included for commannd injection can be |  ; & $ > < ' \  ! >> #

Escape or filter special characters for windows,   ( ) < > & * ‘ | = ? ; [ ] ^ ~ ! . ” % @ / \ : + , `
Escape or filter special characters for Linux, { }  ( ) < > & * ‘ | = ? ; [ ]  $ – # ~ ! . ” %  / \ : + , `

Oracc Srch Handling of Command Injection Risk:
**********************************************

      * sanitized in wx

      	- Whitelist alphanumeric and characters >= 0x160
	- Map ASCII transliteration to Unicode
	  ' to ʾ
	  ` to ʿ
	  ',' +s/t to ṣ/Ṣ and ṭ/Ṭ
	  s' to ś
	- Map essential search engine characters to Unicode alternates

	  ! to ‼ U+203C
      	  ( to ⸨ U+2E28
      	  ) to ⸩ U+2E29
	  ~ to ～U+FF5E FULL-WIDTH TILDE
	  : to ︓ U+FE13
	  % to ％ U+FF05
	  
	- Review search docs and implementation for additional cases
	- Delete all others and return a brief error page unless the bad
	  characters are only ATF brackets which can then reasonably be
      	  included in a cut-paste search

      * demapping of ‼/⸨/⸩ done in search engine

* Remove regexp support?
